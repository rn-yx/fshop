/*
 * Copyright 2020 rannuo1010@gmail.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ${package.Controller};

import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import $!{cfg.GlobalRet};
import $!{cfg.domainPackage}.vo.${entity}VO;

import java.io.Serializable;
import javax.validation.Valid;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * Description: $!{table.comment}控制器
 *
 * @author ${author}
 * @date ${date}
 */
#if(${restControllerStyle})
@Api(tags = {"${table.comment}服务接口"})
@RestController
#else
@Controller
#end
@AllArgsConstructor
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    private final ${table.serviceName} ${table.entityPath}Service;


    @ApiOperation(value = "根据ID查询$!{table.comment}")
    @GetMapping("/{id}")
    public GlobalRet<${entity}VO> get${entity}ById(@PathVariable(value = "id") Serializable id) {
        return success();
    }

    @ApiOperation(value = "新增$!{table.comment}")
    @PostMapping
    public GlobalRet add(@Valid @RequestBody ${entity} ${table.entityPath}) {
        return success();
    }

    @ApiOperation(value = "根据ID删除$!{table.comment}")
    @DeleteMapping("/{id}")
    public GlobalRet delete(@PathVariable(value = "id") Serializable id) {
        return success();
    }

    @ApiOperation(value = "更新$!{table.comment}")
    @PutMapping
    public GlobalRet update(@Valid @RequestBody ${entity} ${table.entityPath}){
        return success();
    }

}
#end